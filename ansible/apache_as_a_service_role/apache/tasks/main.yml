- name: Install Java on the machine
  ansible.builtin.apt:
    name: "{{ java_version }}"
    state: latest
    update_cache: yes

- name: Create home directory
  ansible.builtin.file:
    path: "{{ home_dir }}"
    state: directory
    mode: '0755'

- name: Create Tomcat group if not present
  ansible.builtin.group:
    name: "{{ group }}"
    state: present

- name: Add user to the Tomcat home directory
  ansible.builtin.user:
    name: "{{ user }}"
    groups: "{{ group }}"
    append: yes
    home: "{{ home_dir }}"
    shell: /bin/false
    create_home: yes

- name: Download and unarchive Tomcat
  ansible.builtin.unarchive:
    src: https://dlcdn.apache.org/tomcat/tomcat-9/v{{ version }}/bin/apache-tomcat-{{ version }}.tar.gz
    dest: "{{ home_dir }}"
    owner: "{{ user }}"
    group: "{{ group }}"
    remote_src: yes
    creates: "{{ home_dir }}/apache-tomcat-{{ version }}"

- name: Create a symbolic link
  ansible.builtin.file:
    src: "{{ home_dir }}/apache-tomcat-{{ version }}"
    dest: "{{ home_dir }}/latest"
    state: link
    force: yes

- name: Set permissions and ownership for Tomcat directory
  ansible.builtin.file:
    path: "{{ home_dir }}/apache-tomcat-{{ version }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: '0755'
    recurse: yes

- name: give execute permissions to shellfiles
  ansible.builtin.shell:
    cmd: "chmod +x /opt/tomcat/latest/bin/*.sh"
    executable: "/bin/bash"

- name: Copy service file to systemd
  ansible.builtin.template:
    src: tomcat.service.j2
    dest: /etc/systemd/system/tomcat.service
  notify:
    - restart the service

- name: Reload the daemon
  ansible.builtin.systemd:
    daemon_reload: true

- name: Start service apache, if not started
  ansible.builtin.service:
    name: tomcat.service
    state: started
    enabled: yes

- name: Copy file with owner and permission, using symbolic representation
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ user }}"
    group: "{{ group }}"
  loop: "{{ pcks }}"
  notify: 
    - restart the service
